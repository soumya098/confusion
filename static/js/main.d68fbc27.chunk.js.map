{"version":3,"sources":["components/LoadingComponent.js","shared/BaseURL.js","components/MenuComponent.js","components/HeaderComponets.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetailsComponents.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","App.js","redux/configStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","in","trasformProps","exitTransform","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","HeaderComponets","state","isNavOpen","isModalOpen","toggleModal","bind","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","toggleNav","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","Component","FooterComponent","target","RenderCard","item","CardBody","designation","CardSubtitle","CardText","description","HomeComponent","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","ContactComponent","handleSubmit","values","postFeedBack","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","Button","color","Renderleader","leaders","lead","Media","tag","left","top","object","body","heading","list","About","CardHeader","title","RenderDish","RenderComments","comments","postComment","dishId","CommDetail","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetails","CommentForm","rating","yourname","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","MainComponent","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","fname","lname","contType","msg","newFeedBack","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","React","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d68fbc27.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12 offset-4\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/BaseURL';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <FadeTransform in trasformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle className=\"dishName\">{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-3\" key={dish.id}>\r\n                <RenderMenuItem dish={dish}></RenderMenuItem>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container mt-1\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content justify-content-center\">\r\n                    {menu}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react'\r\nimport {\r\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/BaseURL';\r\n\r\nclass HeaderComponets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\" className=\"fixed-top\">\r\n                    <div className=\"container-fluid\">\r\n                        <NavbarToggler onClick={() => this.toggleNav()} />\r\n                        <NavbarBrand className=\"mr-auto ml-1\" href=\"/\"><img src={baseUrl+\"images/logo.png\"} height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar className=\"mr-auto\">\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <button className=\"btn-primary\" outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <button className=\"btn btn-primary\" type=\"submit\" value=\"submit\" >Login</button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponets\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer mt-4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-4 offset-1 col-sm-2\">\r\n                            <h5>Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><Link to='/home'>Home</Link></li>\r\n                                <li><Link to='/aboutus'>About Us</Link></li>\r\n                                <li><Link to='/menu'>Menu</Link></li>\r\n                                <li><Link to='/contactus'>Contact Us</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-7 col-sm-5\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                                121, Clear Water Bay Road<br />\r\n                                Clear Water Bay, Kowloon<br />\r\n                                HONG KONG<br />\r\n                                <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                                <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                                <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                    confusion@food.net</a>\r\n                            </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4 align-self-center\">\r\n                            <div className=\"text-center\">\r\n                                <a target=\"blank\" className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                                <a target=\"blank\" className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                                <a target=\"blank\" className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                                <a target=\"blank\" className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                                <a target=\"blank\" className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                                <a target=\"blank\" className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent\r\n","import React from 'react'\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/BaseURL';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform in trasformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n\r\n        );\r\n\r\n}\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row row-content justify-content-center\">\r\n                <div className=\"col-12 col-md\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeComponent\r\n","import React, { Component } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row,} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass ContactComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedBack(values.firstname,values.lastname,values.telnum, values.email, values.agree, values.contactType, values.message)\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-1\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-secondary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={(values) => this.handleSubmit(values)} model=\"feedback\">\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"8\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactComponent\r\n\r\n\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/BaseURL';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Fade, Stagger } from 'react-animation-components'\r\n\r\nfunction Renderleader({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const lead = leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                <Media tag=\"li\" className=\"m-4\" key={leader.id}>\r\n                    <Media left top href=\"#\" className=\"mr-2\">\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n\r\n                    <Media body className=\"ml-4\">\r\n                        <Media heading>\r\n                            {leader.name}\r\n                        </Media>\r\n                        <p>{leader.designation}</p>\r\n                        {leader.description}\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Media list>\r\n            <Stagger in>\r\n                {lead}\r\n            </Stagger>\r\n\r\n        </Media>\r\n    )\r\n\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    return (\r\n        <div className=\"container mt-1\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-mybg text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Renderleader leaders={props.leaders} isLoading={props.isLoading} errMess={props.errMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Label, Row, Col\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/BaseURL';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <FadeTransform in trasformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    )\r\n}\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments != null) {\r\n        let CommDetail = comments.map((comment) => {\r\n            return (\r\n                <Fade in>\r\n                    <div key={comment.id} className=\"m-1\">\r\n                        <p className=\"mb-1\">{comment.comment}</p>\r\n                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US',\r\n                            { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </div>\r\n                </Fade>\r\n            )\r\n        });\r\n        return (\r\n            <div>\r\n                <Stagger in>\r\n                    {CommDetail}\r\n                </Stagger>\r\n\r\n                <div>\r\n                    <br />\r\n                    <CommentForm dishId={dishId} postComment={postComment}></CommentForm>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function DishDetails(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container mt-1\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container mt-1\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container mt-1\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content justify-content-center\">\r\n                    <div className=\"col-12 col-md-4 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4>COMMENTS</h4>\r\n                        <div>\r\n                            <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id}></RenderComments>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nexport class CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        // console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.yourname, values.comment);\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button className=\"btn secondary\" onClick={this.toggleModal}> <span className=\"fa fa-pencil\"></span>{'    '}submit Comment</button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".yourname\" name=\"yourname\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(4), maxLength: maxLength(20)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required. ',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 20 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Your Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\" >\r\n                                        <option>0</option>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={8}>Your Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"5\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={6}>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"> Submit </button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/BaseURL';\r\n\r\n\r\n//function that creates a action object\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n\r\n});\r\n\r\n//upload comment part\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin',\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post Comment', error.message);\r\n            alert('your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n\r\n}\r\n\r\n//dishes part\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n//comments part\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n//promos part\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n//Leaders part\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n//feedback\r\nexport const postFeedBack = (fname, lname, telnum, email, agree, contType, msg)=>() => {\r\n    const newFeedBack = {\r\n        firstname: fname,\r\n        lastname: lname, telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contType,\r\n        message: msg\r\n    }\r\n    newFeedBack.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedBack),\r\n        headers: {\r\n            'content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin',\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log(response);\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            alert(\"Thank You for your FeedBack\\n\"+JSON.stringify(response))\r\n        })\r\n        .catch(error => {\r\n            console.log('post FeedBack', error.message);\r\n            alert('your feedBack could not be posted\\nError: ' + error.message);\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\nexport const ALERT_FEEDBACK = \"ALERT_FEEDBACK\";","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponets';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishDetailsComponents';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedBack, } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedBack: (fname, lname, telnum, email, agree, contType, msg) => dispatch(postFeedBack(fname, lname, telnum, email, agree, contType, msg)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n\r\n});\r\n\r\nclass MainComponent extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}>\r\n                </Home>\r\n            );\r\n        }\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment} />\r\n            );\r\n        };\r\n\r\n        const AboutPage = () => {\r\n            return (\r\n                <div>\r\n                    <About leaders={this.props.leaders.leaders}\r\n                        isLoading={this.props.leaders.isLoading}\r\n                        errMess={this.props.leaders.errMess}></About>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                                postFeedBack={this.props.postFeedBack} />} />\r\n                            <Route exact path='/aboutus' component={AboutPage} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainComponent));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n//not for local form","import React from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './Forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}